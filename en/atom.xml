<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[&lt;fabarea/&gt;]]></title>
    <link href="/en/atom.xml" rel="self"/>
    <link href="/en/"/>
    <updated>2015-03-20T22:13:49+01:00</updated>
    <id>/en/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Date format in PHP]]></title>
            <link href="/en/blog/2015/03/17/format-date-in-php/"/>
            <updated>2015-03-17T00:00:00+01:00</updated>
            <id>/en/blog/2015/03/17/format-date-in-php/</id>
            <content type="html"><![CDATA[<p>Formatting dates in PHP is one of those things that is more twisted / complicated than it looks. The case is simple, we want to display a date, taking into account the linguistic context. Let us first look the <code>\DateTime ()</code></p>

<pre><code>$date = new \DateTime();
print $date-&gt;format("d F Y"); // 20 Mar.2015
</code></pre>

<p>Mmm ... It works but unfortunately for us, the return of <code>format</code> method is in English only.</p>

<p>To translate a date, use the <code>strftime</code> function which will used the Locales of the system under the hood. However, the formatting syntax is different since it has percent "%" as symbol and different letters.</p>

<pre><code>setlocale(LC_TIME, "fr_FR");
print strftime("%A %B %G"); // Vendredi mars 2015
</code></pre>

<p>By combining the object approach and the <code>strftime</code> function, this provides a more elegant solution.</p>

<pre><code>setlocale(LC_TIME, "fr_FR");
$date = new \DateTime();
print strftime("%A %B %G", $date-&gt;getTimestamp());
// Vendredi mars 2015
</code></pre>

<p>Unfortunately, this is not final solutio because <code>strftime</code> has limitations and does not work properly with a time prior to 1970.</p>

<p>Finally, the safest approach is to use a PHP extension "<a href="http://php.net/intl">Intl</a>" which is specialized in this task. A quick example:</p>

<pre><code>$date = new \DateTime();

$formatter = new IntlDateFormatter('fr_FR', IntlDateFormatter::SHORT, IntlDateFormatter::SHORT);
$formatter-&gt;setPattern('E d.M.Y');

print $formatter-&gt;format($date); // ven. 20.3.2015
</code></pre>

<p>QED!</p>

<p>This article is <a href="/fr/blog/2015/03/17/format-date-in-php/">available</a> in French also.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Automatic TER release from Github]]></title>
            <link href="/en/blog/2015/02/20/automatic-ter-release/"/>
            <updated>2015-02-20T00:00:00+01:00</updated>
            <id>/en/blog/2015/02/20/automatic-ter-release/</id>
            <content type="html"><![CDATA[<p>As the maintainer of <a href="/en/blog/2015/02/10/github-migration/">several extensions</a> for TYPO3 CMS, I have always found the release process to the <a href="http://typo3.org/extensions/repository/">TER</a> a little bit tedious. In fact, the operation is more complicated than it seems. We must be very carful about every detail: Git tags, commit message, update the correct version number, etc... To help in this task, I have a checklist that I follow step by step. But still! And if all goes well, the procedure takes arourd 10 to 15 minutes per extension.</p>

<p>I had on the radar several attempts to automate the upload of the TER via Webhooks available in Github. There was, among others, the approach of <a href="http://blog.kay-strobach.de/">Kay Strobach</a> with this <a href="https://github.com/kaystrobach/TYPO3TerHook/">proof of concept</a>.</p>

<p>The underlying idea was to trigger the upload via the creation of a Git tag. Having discussed the matter with <a href="https://plus.google.com/+AdrienCrivelli/posts">my colleague Adrien</a>, we followed the approach explained in detail in <a href="https://github.com/Ecodev/fluidtypo3-gizzle.">this article</a> written by <a href="https://twitter.com/namelesscoder">Claus Due</a>. The verbosity of the article can let thing about something complexd to set up. It is not so! The implementation can be summarized in a few steps.</p>

<h3>Preparatory tasks</h3>

<ul>
<li>Create a subdomain, eg http://release.example.com</li>
<li>Clone extension <a href="https://github.com/Ecodev/fluidtypo3-gizzle">https://github.com/Ecodev/fluidtypo3-gizzle</a>, the "web" folder to be the root of the document root.</li>
<li>Add a webhook for the project on GitHub

<ul>
<li>URL: http://release.example.com/?settings=settings/ExtensionRelease.yml</li>
<li>Secret: 12356</li>
</ul></li>
<li>Transfer the key extension to a member "release" on <a href="typo3.org">typo3.org</a>. This step is optional but recommended.</li>
</ul>

<h3>Release task</h3>

<ul>
<li>Update the version number in the file <code>ext_emconf.php</code> and <code>composer.json</code>.</li>
<li>Create a tag and push this tag with the command <code>git push --tags</code>, the extension is uploaded to TER with a generic message that points to the log on Github. Very convenient!</li>
</ul>

<h3>A few screenshots</h3>

<p><img src="/images/2015-02-20/2015-02-20_2202.png" alt="" /></p>

<p>The setup of the Webhook</p>

<hr />

<p><img src="/images/2015-02-20/2015-02-20_2203.png" alt="" /></p>

<p>Analysis of paylod to verify what has been sent to Webhook.</p>

<hr />

<p><img src="/images/2015-02-20/2015-02-20_2204.png" alt="" /></p>

<p>The return of the Webhook actually corresponding to the message sent by the TER.</p>

<p>This article is <a href="/fr/blog/2015/02/20/automatic-ter-release">available</a> in French also.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Moving my extensions to Github]]></title>
            <link href="/en/blog/2015/02/10/github-migration/"/>
            <updated>2015-02-10T00:00:00+01:00</updated>
            <id>/en/blog/2015/02/10/github-migration/</id>
            <content type="html"><![CDATA[<p>The <a href="https://forge.typo3.org/">TYPO3 Forge</a> is an interesting place that groups together a set of extensions and web resources. Unfortunately, the platform has negotiated the transition to Git with delay and many projects have moved to Github , Bitbucket and others. Added to this, the difficulty of <a href="https://code.google.com/p/gerrit/">Gerrit</a> which is a tool pretty tricky to get started with.</p>

<p>To facilitate contributions on my projects, I decided to move my extensions to Github for pragmatic reasons.</p>

<ul>
<li><a href="https://github.com/fabarea/context_hints">context_hints</a></li>
<li><a href="https://github.com/fabarea/media">media</a></li>
<li><a href="https://github.com/fabarea/vidi">vidi</a></li>
<li><a href="https://github.com/fabarea/vidi_starter">vidi_starter</a></li>
<li><a href="https://github.com/fabarea/vidi_frontend">vidi_frontend</a></li>
<li><a href="https://github.com/fabarea/quick_form">quick_form</a></li>
<li><a href="https://github.com/fabarea/messenger">messenger</a></li>
<li><a href="https://github.com/fabarea/rss_display">rss_display</a></li>
<li><a href="https://github.com/fabarea/metadata">metadata</a></li>
<li><a href="https://github.com/fabarea/media_upload">media_upload</a></li>
</ul>

<p>This article <a href="/fr/blog/2015/02/10/github-migration">is available</a> in French as well.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Using the migration file]]></title>
            <link href="/en/blog/2015/01/03/media-tool/"/>
            <updated>2015-01-03T00:00:00+01:00</updated>
            <id>/en/blog/2015/01/03/media-tool/</id>
            <content type="html"><![CDATA[<p>Today I decided to migrate the namespace of this extension</p>

<p>This is quite simple actually.</p>

<p>Welcome to my blog which looks more as an experiment for the moment.</p>

<p>What is going to be here? Mainly technical stuff related to my on-going projects.</p>

<p>I work in my daily work with products from the <a href="http://typo3.org/">TYPO3</a> ecosystem mainly with <a href="http://composer.typo3.org/">CMS</a> but not only!
I am maintaining a couple of extensions there.</p>

<p>This blog is powered by <a href="https://sculpin.io/">Sculpin</a>, a flexible site generator. I stumbled upon Sculpin while looking around for different site generator system.
Sculpin is written in PHP and has a nice architecture on the top of <a href="http://symfony.com/">Symfony</a>.
This kind of product looks quite appealing for economic, small-size website. Once the site is generated there
is no maintenance required anymore. As a bonus, it can be freely hosted on various places!</p>

<p>For a quick start I have been using <a href="https://github.com/sculpin/sculpin-blog-skeleton.git">this repository</a> which provides a straightforward structure to start bloging with Scuplin.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Fab Area!]]></title>
            <link href="/en/blog/2014/10/02/fabarea/"/>
            <updated>2014-10-02T00:00:00+02:00</updated>
            <id>/en/blog/2014/10/02/fabarea/</id>
            <content type="html"><![CDATA[<p>Welcome to my blog which looks more as an experiment for the moment.</p>

<p>What is going to be here? Mainly technical stuff related to my on-going projects.</p>

<p>I work in my daily work with products from the <a href="http://typo3.org/">TYPO3</a> ecosystem mainly with <a href="http://composer.typo3.org/">CMS</a> but not only!
I am maintaining a couple of extensions there.</p>

<p>This blog is powered by <a href="https://sculpin.io/">Sculpin</a>, a flexible site generator. I stumbled upon Sculpin while looking around for different site generator system.
Sculpin is written in PHP and has a nice architecture on the top of <a href="http://symfony.com/">Symfony</a>.
This kind of product looks quite appealing for economic, small-size website. Once the site is generated there
is no maintenance required anymore. As a bonus, it can be freely hosted on various places!</p>

<p>For a quick start I have been using <a href="https://github.com/sculpin/sculpin-blog-skeleton.git">this repository</a> which provides a straightforward structure to start bloging with Scuplin.</p>
]]></content>
        </entry>
    </feed>